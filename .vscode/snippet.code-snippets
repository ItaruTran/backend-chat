{
	// Place your jobvid-api-backend workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Request Fastify": {
		"scope": "javascript",
		"prefix": "request-fastify",
		"body": [
			"import { Type } from '@sinclair/typebox';",
			"",
			"const requestSchema = {",
			"  // querystring: Type.Partial(Type.Object({})),",
			"  // headers: Type.Object({}),",
			"  // params: Type.Object({}),",
      "  // body: Type.Object({}),",
      "  // response: {",
      "  //   200: Type.Object({}),",
      "  // },",
			"}",
			"",
			"/** @type {import('#t/handler').Handler<typeof requestSchema>} */",
			"export const opts = {",
			"  schema: {",
			"    ...requestSchema,",
			"    tags: ['$1'],",
			"    // consumes: ['multipart/form-data', 'application/json'],",
			"  },",
			"  async handler(req, reply) {",
			"    $2",
			"  }",
			"}",
			"",
			"/** @type {import('openapi-types').OpenAPIV3.ComponentsObject['schemas']} */",
			"// export const schemas = {",
			"// }",
			""
		]
	}
}